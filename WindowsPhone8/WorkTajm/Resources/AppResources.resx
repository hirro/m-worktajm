<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ResourceFlowDirection" xml:space="preserve">
    <value>LeftToRight</value>
    <comment>Controls the FlowDirection for all elements in the RootFrame. Set to the traditional direction of this resource file's language</comment>
  </data>
  <data name="ResourceLanguage" xml:space="preserve">
    <value>en-US</value>
    <comment>Controls the Language and ensures that the font for all elements in the RootFrame aligns with the app's language. Set to the language code of this resource file's language.</comment>
  </data>
  <data name="ApplicationTitle" xml:space="preserve">
    <value>WorkTajm</value>
  </data>
  <data name="AppBarButtonText" xml:space="preserve">
    <value>add</value>
  </data>
  <data name="AppBarMenuItemText" xml:space="preserve">
    <value>Menu Item</value>
  </data>
  <data name="LoginLoginButton" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LoginPassword" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="LoginRememberMe" xml:space="preserve">
    <value>Remember me</value>
  </data>
  <data name="LoginTitle" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="LoginUsername" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="WebExceptionStatus_CacheEntryNotFound" xml:space="preserve">
    <value>The specified cache entry was not found.</value>
  </data>
  <data name="WebExceptionStatus_ConnectFailure" xml:space="preserve">
    <value>The remote service point could not be contacted at the transport level.</value>
  </data>
  <data name="WebExceptionStatus_ConnectionClosed" xml:space="preserve">
    <value>The connection was prematurely closed.</value>
  </data>
  <data name="WebExceptionStatus_KeepAliveFailure" xml:space="preserve">
    <value>The connection for a request that specifies the Keep-alive header was closed unexpectedly.</value>
  </data>
  <data name="WebExceptionStatus_MessageLengthLimitExceeded" xml:space="preserve">
    <value>A message was received that exceeded the specified limit when sending a request or receiving a response from the server.</value>
  </data>
  <data name="WebExceptionStatus_NameResolutionFailure" xml:space="preserve">
    <value>The name resolver service could not resolve the host name.</value>
  </data>
  <data name="WebExceptionStatus_Pending" xml:space="preserve">
    <value>An internal asynchronous request is pending.</value>
  </data>
  <data name="WebExceptionStatus_PipelineFailure" xml:space="preserve">
    <value>The request was a piplined request and the connection was closed before the response was received.</value>
  </data>
  <data name="WebExceptionStatus_ProtocolError" xml:space="preserve">
    <value>The response received from the server was complete but indicated a protocol-level error. For example, an HTTP protocol error such as 401 Access Denied would use this status.</value>
  </data>
  <data name="WebExceptionStatus_ProxyNameResolutionFailure" xml:space="preserve">
    <value>The name resolver service could not resolve the proxy host name.</value>
  </data>
  <data name="WebExceptionStatus_ReceiveFailure" xml:space="preserve">
    <value>A complete response was not received from the remote server.</value>
  </data>
  <data name="WebExceptionStatus_RequestCanceled" xml:space="preserve">
    <value>The request was canceled, the WebRequest.Abort method was called, or an unclassifiable error occurred. This is the default value for Status.</value>
  </data>
  <data name="WebExceptionStatus_RequestProhibitedByCachePolicy" xml:space="preserve">
    <value>The request was not permitted by the cache policy. In general, this occurs when a request is not cacheable and the effective policy prohibits sending the request to the server. You might receive this status if a request method implies the presence of a request body, a request method requires direct interaction with the server, or a request contains a conditional header.</value>
  </data>
  <data name="WebExceptionStatus_RequestProhibitedByProxy" xml:space="preserve">
    <value>This request was not permitted by the proxy.</value>
  </data>
  <data name="WebExceptionStatus_SecureChannelFailure" xml:space="preserve">
    <value>An error occurred while establishing a connection using SSL.</value>
  </data>
  <data name="WebExceptionStatus_SendFailure" xml:space="preserve">
    <value>A complete request could not be sent to the remote server.</value>
  </data>
  <data name="WebExceptionStatus_ServerProtocolViolation" xml:space="preserve">
    <value>The server response was not a valid HTTP response.</value>
  </data>
  <data name="WebExceptionStatus_Success" xml:space="preserve">
    <value>No error was encountered.</value>
  </data>
  <data name="WebExceptionStatus_Timeout" xml:space="preserve">
    <value>No response was received during the time-out period for a request.</value>
  </data>
  <data name="WebExceptionStatus_TrustFailure" xml:space="preserve">
    <value>A server certificate could not be validated.</value>
  </data>
  <data name="WebExceptionStatus_UnknownError" xml:space="preserve">
    <value>An exception of unknown type has occurred.</value>
  </data>
  <data name="LoginFailedTitle" xml:space="preserve">
    <value>Login failed</value>
  </data>
  <data name="LoginFailedButton" xml:space="preserve">
    <value>OK</value>
  </data>
</root>