//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WorkTajm.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class AppResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal AppResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WorkTajm.Resources.AppResources", typeof(AppResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to add.
        /// </summary>
        public static string AppBarButtonText {
            get {
                return ResourceManager.GetString("AppBarButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Menu Item.
        /// </summary>
        public static string AppBarMenuItemText {
            get {
                return ResourceManager.GetString("AppBarMenuItemText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Worktajm.
        /// </summary>
        public static string ApplicationName {
            get {
                return ResourceManager.GetString("ApplicationName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WorkTajm.
        /// </summary>
        public static string ApplicationTitle {
            get {
                return ResourceManager.GetString("ApplicationTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customers.
        /// </summary>
        public static string CustomersTitle {
            get {
                return ResourceManager.GetString("CustomersTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OK.
        /// </summary>
        public static string LoginFailedButton {
            get {
                return ResourceManager.GetString("LoginFailedButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Login failed.
        /// </summary>
        public static string LoginFailedTitle {
            get {
                return ResourceManager.GetString("LoginFailedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Login.
        /// </summary>
        public static string LoginLoginButton {
            get {
                return ResourceManager.GetString("LoginLoginButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password.
        /// </summary>
        public static string LoginPassword {
            get {
                return ResourceManager.GetString("LoginPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remember me.
        /// </summary>
        public static string LoginRememberMe {
            get {
                return ResourceManager.GetString("LoginRememberMe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log in.
        /// </summary>
        public static string LoginTitle {
            get {
                return ResourceManager.GetString("LoginTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Username.
        /// </summary>
        public static string LoginUsername {
            get {
                return ResourceManager.GetString("LoginUsername", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Projects.
        /// </summary>
        public static string ProjectsTitle {
            get {
                return ResourceManager.GetString("ProjectsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LeftToRight.
        /// </summary>
        public static string ResourceFlowDirection {
            get {
                return ResourceManager.GetString("ResourceFlowDirection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to en-US.
        /// </summary>
        public static string ResourceLanguage {
            get {
                return ResourceManager.GetString("ResourceLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        public static string SettingsTitle {
            get {
                return ResourceManager.GetString("SettingsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start.
        /// </summary>
        public static string StartTitle {
            get {
                return ResourceManager.GetString("StartTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time Entries.
        /// </summary>
        public static string TimeEntriesTitle {
            get {
                return ResourceManager.GetString("TimeEntriesTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified cache entry was not found..
        /// </summary>
        public static string WebExceptionStatus_CacheEntryNotFound {
            get {
                return ResourceManager.GetString("WebExceptionStatus_CacheEntryNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The remote service point could not be contacted at the transport level..
        /// </summary>
        public static string WebExceptionStatus_ConnectFailure {
            get {
                return ResourceManager.GetString("WebExceptionStatus_ConnectFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection was prematurely closed..
        /// </summary>
        public static string WebExceptionStatus_ConnectionClosed {
            get {
                return ResourceManager.GetString("WebExceptionStatus_ConnectionClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection for a request that specifies the Keep-alive header was closed unexpectedly..
        /// </summary>
        public static string WebExceptionStatus_KeepAliveFailure {
            get {
                return ResourceManager.GetString("WebExceptionStatus_KeepAliveFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A message was received that exceeded the specified limit when sending a request or receiving a response from the server..
        /// </summary>
        public static string WebExceptionStatus_MessageLengthLimitExceeded {
            get {
                return ResourceManager.GetString("WebExceptionStatus_MessageLengthLimitExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name resolver service could not resolve the host name..
        /// </summary>
        public static string WebExceptionStatus_NameResolutionFailure {
            get {
                return ResourceManager.GetString("WebExceptionStatus_NameResolutionFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An internal asynchronous request is pending..
        /// </summary>
        public static string WebExceptionStatus_Pending {
            get {
                return ResourceManager.GetString("WebExceptionStatus_Pending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The request was a piplined request and the connection was closed before the response was received..
        /// </summary>
        public static string WebExceptionStatus_PipelineFailure {
            get {
                return ResourceManager.GetString("WebExceptionStatus_PipelineFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The response received from the server was complete but indicated a protocol-level error. For example, an HTTP protocol error such as 401 Access Denied would use this status..
        /// </summary>
        public static string WebExceptionStatus_ProtocolError {
            get {
                return ResourceManager.GetString("WebExceptionStatus_ProtocolError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name resolver service could not resolve the proxy host name..
        /// </summary>
        public static string WebExceptionStatus_ProxyNameResolutionFailure {
            get {
                return ResourceManager.GetString("WebExceptionStatus_ProxyNameResolutionFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A complete response was not received from the remote server..
        /// </summary>
        public static string WebExceptionStatus_ReceiveFailure {
            get {
                return ResourceManager.GetString("WebExceptionStatus_ReceiveFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The request was canceled, the WebRequest.Abort method was called, or an unclassifiable error occurred. This is the default value for Status..
        /// </summary>
        public static string WebExceptionStatus_RequestCanceled {
            get {
                return ResourceManager.GetString("WebExceptionStatus_RequestCanceled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The request was not permitted by the cache policy. In general, this occurs when a request is not cacheable and the effective policy prohibits sending the request to the server. You might receive this status if a request method implies the presence of a request body, a request method requires direct interaction with the server, or a request contains a conditional header..
        /// </summary>
        public static string WebExceptionStatus_RequestProhibitedByCachePolicy {
            get {
                return ResourceManager.GetString("WebExceptionStatus_RequestProhibitedByCachePolicy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This request was not permitted by the proxy..
        /// </summary>
        public static string WebExceptionStatus_RequestProhibitedByProxy {
            get {
                return ResourceManager.GetString("WebExceptionStatus_RequestProhibitedByProxy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while establishing a connection using SSL..
        /// </summary>
        public static string WebExceptionStatus_SecureChannelFailure {
            get {
                return ResourceManager.GetString("WebExceptionStatus_SecureChannelFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A complete request could not be sent to the remote server..
        /// </summary>
        public static string WebExceptionStatus_SendFailure {
            get {
                return ResourceManager.GetString("WebExceptionStatus_SendFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server response was not a valid HTTP response..
        /// </summary>
        public static string WebExceptionStatus_ServerProtocolViolation {
            get {
                return ResourceManager.GetString("WebExceptionStatus_ServerProtocolViolation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No error was encountered..
        /// </summary>
        public static string WebExceptionStatus_Success {
            get {
                return ResourceManager.GetString("WebExceptionStatus_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No response was received during the time-out period for a request..
        /// </summary>
        public static string WebExceptionStatus_Timeout {
            get {
                return ResourceManager.GetString("WebExceptionStatus_Timeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A server certificate could not be validated..
        /// </summary>
        public static string WebExceptionStatus_TrustFailure {
            get {
                return ResourceManager.GetString("WebExceptionStatus_TrustFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception of unknown type has occurred..
        /// </summary>
        public static string WebExceptionStatus_UnknownError {
            get {
                return ResourceManager.GetString("WebExceptionStatus_UnknownError", resourceCulture);
            }
        }
    }
}
